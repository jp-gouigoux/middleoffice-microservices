version: '2.1'
services:

  traefik:
    image: traefik:1.5.4-alpine
    container_name: traefik
    command: --web --docker --docker.domain=${MO_DOMAIN} --logLevel=DEBUG
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  mongodb:
    image: mongo:3.6.4
    container_name: db
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
  
  elasticsearch:
    image: elasticsearch:1.7.6-alpine
    container_name: es
    ports:
      - 9200:9200
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9200"]
      interval: 3s
      timeout: 5s
      retries: 20
  
  mo-apirequest:
    image: jpgouigoux/mo-apirequest
    build: ./mo-apirequest
    container_name: mo-apirequest
    labels:
      traefik.frontend.rule: "Path: /api/requests, /api/requests/{id:[0-9a-z]+}"
      traefik.port: "80"
    links:
      - mongodb:mongodb
    environment:
      - MONGO_URL=mongodb://mongodb:27017/middleoffice
      - BASE_URL=http://${MO_DOMAIN}
    restart: on-failure
    depends_on:
      elasticsearch:
        condition: service_healthy

  mo-apirequesttype:
    image: jpgouigoux/mo-apirequesttype
    build: ./mo-apirequesttype
    container_name: mo-apirequesttype
    labels:
      traefik.frontend.rule: "Path: /api/requesttypes, /api/requesttypes/{code}"
      traefik.port: "80"
    links:
      - mongodb:mongodb
    environment:
      - MONGO_URL=mongodb://mongodb:27017/middleoffice
      - BASE_URL=http://${MO_DOMAIN}
    restart: on-failure
    depends_on:
      elasticsearch:
        condition: service_healthy

  mo-apivote:
    image: jpgouigoux/mo-apivote
    build: ./mo-apivote
    container_name: mo-apivote
    labels:
      traefik.frontend.rule: "Path: /api/requests/{id:[0-9a-z]+}/vote"
      traefik.port: "80"
    links:
      - mongodb:mongodb
    environment:
      - MONGO_URL=mongodb://mongodb:27017/middleoffice
      - BASE_URL=http://${MO_DOMAIN}
      - WEBHOOKS_EXECVOTE='[{"topic":"POST+*/execvote", "callback":"/api/execvote", "method":"POST"}]'
    restart: on-failure
    depends_on:
      elasticsearch:
        condition: service_healthy

  mo-portal:
    image: jpgouigoux/mo-portal
    build: ./mo-portal
    container_name: mo-portal
    labels:
      traefik.frontend.rule: "Path: /"
      traefik.port: "80"
    restart: on-failure
    
  mo-uxrequest:
    image: jpgouigoux/mo-uxrequest
    build: ./mo-uxrequest
    container_name: mo-uxrequest
    labels:
      traefik.frontend.rule: "PathStrip: /api/ux/request"
      traefik.port: "80"
    environment:
      - BASE_URL=http://${MO_DOMAIN}
    restart: on-failure

  mo-uxrequest-vote:
    image: jpgouigoux/mo-uxrequest-vote
    build: ./mo-uxrequest-vote
    container_name: mo-uxrequest-vote
    labels:
      traefik.frontend.rule: "PathStripRegex: /api/ux/requests/{id:[0-9a-z]+}/vote"
      traefik.port: "80"
    environment:
      - BASE_URL=http://${MO_DOMAIN}
    restart: on-failure

  mo-uxrequests-tobevoted:
    image: jpgouigoux/mo-uxrequests-tobevoted
    build: ./mo-uxrequests-tobevoted
    container_name: mo-uxrequests-tobevoted
    labels:
      traefik.frontend.rule: "PathStrip: /api/ux/requests"
      traefik.port: "80"
    environment:
      - BASE_URL=http://${MO_DOMAIN}
    restart: on-failure

  mo-uxrequesttype:
    image: jpgouigoux/mo-uxrequesttype
    build: ./mo-uxrequesttype
    container_name: mo-uxrequesttype
    labels:
      traefik.frontend.rule: "PathStrip: /api/ux/requesttype"
      traefik.port: "80"
    environment:
      - BASE_URL=http://${MO_DOMAIN}
    restart: on-failure

volumes:
  mongodata:
